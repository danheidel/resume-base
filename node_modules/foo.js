var db = require('mysql');

var dbConnection;
var counter = 1;

dbConHandler = function(dbConfig){
  dbConnection = db.createConnection(dbConfig);
  dbConnection._dbConfig = dbConfig;
  
  dbConnection.connect(function(err){
    if(err){
      console.log('error while connecting to db: ', err);
      setTimeout(dbConHandler, 2500, dbConnection._dbConfig);
    }else{
      console.log('database connection opened to: ' + dbConnection._protocol._config.database);
      console.log('connection state: ' + dbConnection.state);
    }
  });

  dbConnection.on('error', function(err){
    console.log('db error: ', err);
    console.log('db connection state: ' + dbConnection.state);
    if(err.code === 'PROTOCOL_CONNECTION_LOST'){
      dbConHandler(dbConnection._dbConfig); //if connection closes, reopen
    }else{
      throw err;
    }
  });

  dbConnection.on('connected', function(){
    console.log('db connection established');
    console.log('connection state: ' + dbConnection.state);
    //console.log(dbConnection._protocol._config);
  });

  dbConnection.on('authenticated', function(){
    console.log('db connection authenticated');
    console.log('connection state: ' + dbConnection.state);
    //console.log(dbConnection._protocol._config);
  });

  dbConnection.on('end', function(err){
    console.log('db connection end');
    if(err){'db end err' + console.log(err);}
    console.log('connection state: ' + dbConnection.state);
    //console.log(dbConnection._protocol._config);
  });
}

exports.openDbConnection = function(dbConfig){
  dbConHandler(dbConfig);
  return dbConnection;
}

exports.closeDbConnection = function(dbConnection){
  dbConnection.end(function(err){
    if(err){
      console.log(err);
    }
    console.log('database connection to ' + dbConnection._protocol._config.database  + ' closed');
  });
}

exports.isNumber = function(iNum){
  return !isNaN(parseFloat(iNum)) && isFinite(iNum);
}
